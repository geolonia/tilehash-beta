{"version":3,"file":"index.es.js","sources":["../src/zfxy.ts","../src/xyz.ts","../src/index.ts"],"sourcesContent":["export type ZFXYTile = [number, number, number, number];\n\nexport const ZFXY_1M_ZOOM_BASE = 25 as const;\n\nexport function getParent(tile: ZFXYTile): ZFXYTile {\n  const [f,x,y,z] = tile;\n  return [f>>1,x>>1,y>>1,z-1];\n}\nexport function getChildren(tile: ZFXYTile): ZFXYTile[] {\n  const [f,x,y,z] = tile;\n  return [\n    [f * 2,     x * 2,     y * 2,     z+1], // +0, +0, +0\n    [f * 2,     x * 2,     y * 2 + 1, z+1], // +0, +0, +1\n    [f * 2,     x * 2 + 1, y * 2,     z+1], // +0, +1, +0\n    [f * 2,     x * 2 + 1, y * 2 + 1, z+1], // +0, +1, +1\n    [f * 2 + 1, x * 2,     y * 2,     z+1], // +1, +0, +0\n    [f * 2 + 1, x * 2,     y * 2 + 1, z+1], // +1, +0, +1\n    [f * 2 + 1, x * 2 + 1, y * 2,     z+1], // +1, +1, +0\n    [f * 2 + 1, x * 2 + 1, y * 2 + 1, z+1], // +1, +1, +1\n  ];\n}\n\nexport function generate(tile: ZFXYTile): string {\n  let [f,x,y,z] = tile;\n  const originalF = f;\n  let out = '';\n  while (z>0) {\n    const thisTile: ZFXYTile = [Math.abs(f),x,y,z];\n    const parent = getParent(thisTile);\n    const childrenOfParent = getChildren(parent);\n    const positionInParent = childrenOfParent.findIndex(\n      ([xf, xx, xy, xz]) => xf === Math.abs(f) && xx === x && xy === y && xz === z\n    );\n    out = (positionInParent + 1).toString() + out;\n    f = parent[0];\n    x = parent[1];\n    y = parent[2];\n    z = parent[3];\n  }\n  return (originalF < 0 ? '-' : '') + out;\n}\n\nexport function parse(th: string): ZFXYTile {\n  let negativeF = false;\n  if (th[0] === '-') {\n    negativeF = true;\n    th = th.substring(1);\n  }\n  let children = getChildren([0,0,0,0]);\n  let lastChild: ZFXYTile;\n  for (const c of th) {\n    lastChild = children[parseInt(c, 10) - 1];\n    children = getChildren(lastChild);\n  }\n  if (negativeF) {\n    lastChild[0] = -lastChild[0];\n  }\n  return lastChild;\n}\n\nexport function toURL(input: ZFXYTile | string): string {\n  let tile: ZFXYTile;\n  if (typeof input === 'string') {\n    tile = parse(input);\n  } else {\n    tile = input;\n  }\n  const [f,x,y,z] = tile;\n  return `${z}/${f}/${x}/${y}`;\n}\n\nexport interface CalculateZFXYInput {\n  lat: number\n  lng: number\n  elevation?: number\n  zoom: number\n}\n\nexport function calculateZFXY(input: CalculateZFXYInput): ZFXYTile {\n  const meters = typeof input.elevation !== 'undefined' ? input.elevation : 0;\n  if (meters <= -(2**ZFXY_1M_ZOOM_BASE) || meters >= (2**ZFXY_1M_ZOOM_BASE)) {\n    throw new Error(`ZFXY only supports elevation between -2^${ZFXY_1M_ZOOM_BASE} and +2^${ZFXY_1M_ZOOM_BASE}.`);\n  }\n  const f = Math.floor(((2 ** input.zoom) * meters) / (2 ** ZFXY_1M_ZOOM_BASE));\n\n  // Algorithm adapted from tilebelt.js\n  const d2r = Math.PI / 180;\n  const sin = Math.sin(input.lat * d2r);\n  const z2 = 2 ** input.zoom;\n  let x = z2 * (input.lng / 360 + 0.5);\n  const y = z2 * (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n\n  // Wrap Tile X\n  x = x % z2;\n  if (x < 0) x = x + z2;\n\n  return [\n    f,\n    Math.floor(x),\n    Math.floor(y),\n    input.zoom,\n  ];\n}\n","export type XYZTile = [number, number, number];\n\nexport function getParent(tile: XYZTile): XYZTile {\n  const [x,y,z] = tile;\n  return [x>>1,y>>1,z-1];\n}\nexport function getChildren(tile: XYZTile): XYZTile[] {\n  const [x,y,z] = tile;\n  return [\n    [x * 2,     y * 2,     z+1], // +0, +0\n    [x * 2,     y * 2 + 1, z+1], // +0, +1\n    [x * 2 + 1, y * 2,     z+1], // +1, +0\n    [x * 2 + 1, y * 2 + 1, z+1], // +1, +1\n  ];\n}\n\nexport function generate(tile: XYZTile): string {\n  let [x,y,z] = tile;\n  if (z % 2 !== 0) {\n    throw new Error('z must be divisible by 2')\n  }\n  let out = BigInt(0);\n  const maxZ = z;\n  while (z>0) {\n    const thisTile: XYZTile = [x,y,z];\n    const parent = getParent(thisTile);\n    const childrenOfParent = getChildren(parent);\n    const positionInParent = childrenOfParent.findIndex(([xx, xy, xz]) => xx === x && xy === y && xz === z);\n    out += (BigInt(positionInParent) << BigInt(2) * BigInt(maxZ - z));\n    x = parent[0];\n    y = parent[1];\n    z = parent[2];\n  }\n  return out.toString(16);\n}\n\nexport function parse(th: string): XYZTile {\n  const int = BigInt(`0o` + th);\n  let bitLen = BigInt(th.length * 4);\n  let scratchInt = int;\n  let children = getChildren([0,0,0]);\n  let lastChild;\n  for (let i = bitLen - BigInt(2); i >= BigInt(0); i -= BigInt(2)) {\n    const posInChildren = scratchInt >> i;\n    lastChild = children[Number(posInChildren)];\n    children = getChildren(lastChild);\n    scratchInt = scratchInt & ((BigInt(2)**i)-BigInt(1));\n  }\n  return lastChild;\n}\n\nexport function toURL(input: XYZTile | string): string {\n  let tile: XYZTile;\n  if (typeof input === 'string') {\n    tile = parse(input);\n  } else {\n    tile = input;\n  }\n  const [x,y,z] = tile;\n  return `${z}/${x}/${y}`;\n}\n","import * as zfxyFuncs from './zfxy';\nimport * as xyzFuncs from './xyz';\n\nexport const zfxy = zfxyFuncs;\nexport const xyz = xyzFuncs;\n"],"names":["getParent","getChildren","generate","parse","toURL"],"mappings":"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"}